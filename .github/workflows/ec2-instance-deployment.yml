name: Create EC2 Instance with Terraform

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main

jobs:
  deploy-ec2:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.3.5'  # specify the desired Terraform version

      # Step 3: Install dependencies (e.g., AWS CLI)
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      # Step 4: Configure AWS credentials from GitHub secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}

      # Step 5: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 6: Validate Terraform
      - name: Terraform Validate
        run: terraform validate

      # Step 7: Plan Terraform deployment
      - name: Terraform Plan
        run: terraform plan

      # Step 8: Apply Terraform to create the EC2 instance
      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Step 9: Output EC2 Instance Public IP
      - name: Output EC2 Public IP
        run: |
          PUBLIC_IP=$(terraform output -raw instance_public_ip)
          echo "EC2 Instance Public IP: $PUBLIC_IP"
